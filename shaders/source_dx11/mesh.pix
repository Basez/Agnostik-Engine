Texture2D shaderTexture : register(t0);
SamplerState SampleType : register(s0);

struct InputData
{
	float2 uv : TEXCOORD0;
	float4 normal : TEXCOORD1;
};

/*
// TODO: fix registers when restoring Cbuffers
cbuffer MaterialProperties : register(b0)
{
	float3 materialDiffuseColor;
	float3 materialSpecularColor;
	float3 materialAmbientColor;
	float materialTransparency;
}
*/

float4 Main(InputData IN) : SV_TARGET
{
	//return float4(IN.uv.x, IN.uv.y, 1.0f - IN.uv.x, 1.0f - IN.uv.y);
	//return float4(1.0f, 1.0f, 1.0f, 1.0f);
	//return IN.color;
	float4 textureColor;

	// Sample the pixel color from the texture using the sampler at this texture coordinate location.
	textureColor = shaderTexture.Sample(SampleType, IN.uv);

	// TODO: multiply with lighting instead of adding
	textureColor += IN.normal * 0.50f;

	return textureColor;
}